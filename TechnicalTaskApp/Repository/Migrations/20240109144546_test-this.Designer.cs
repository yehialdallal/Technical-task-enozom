// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository.Context;

#nullable disable

namespace Repository.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20240109144546_test-this")]
    partial class testthis
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Repository.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Laptops"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Mobiles"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 4,
                            Name = "TVs"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Samsung"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Computers"
                        },
                        new
                        {
                            Id = 7,
                            Name = " HP"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Apple"
                        });
                });

            modelBuilder.Entity("Repository.Entities.CategoryProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProductId");

                    b.ToTable("CategoriesProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 6,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 7,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 8,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 5,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 4,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 3,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 5,
                            ProductId = 4
                        });
                });

            modelBuilder.Entity("Repository.Entities.DenormalizedTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Categories")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Product")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("DenormalizedTable");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Categories = "Laptops, Computers, Electronics, HP",
                            Product = "HP Laptop 15\""
                        },
                        new
                        {
                            Id = 2,
                            Categories = "Mobiles, Electronics, Apple",
                            Product = "iPhone 15"
                        },
                        new
                        {
                            Id = 3,
                            Categories = "Mobiles, Electronics, Samsung",
                            Product = "Samsung S23"
                        },
                        new
                        {
                            Id = 4,
                            Categories = "TVs, Electronics, Samsung",
                            Product = "Samsung LED Screen 32\""
                        });
                });

            modelBuilder.Entity("Repository.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "HP Laptop 15\""
                        },
                        new
                        {
                            Id = 2,
                            Name = "iPhone 15"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Samsung S23"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Samsung LED Screen 32\""
                        });
                });

            modelBuilder.Entity("Repository.Entities.CategoryProduct", b =>
                {
                    b.HasOne("Repository.Entities.Category", "Category")
                        .WithMany("CategoryProduct")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Repository.Entities.Product", "Product")
                        .WithMany("CategoryProduct")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Repository.Entities.Category", b =>
                {
                    b.Navigation("CategoryProduct");
                });

            modelBuilder.Entity("Repository.Entities.Product", b =>
                {
                    b.Navigation("CategoryProduct");
                });
#pragma warning restore 612, 618
        }
    }
}
